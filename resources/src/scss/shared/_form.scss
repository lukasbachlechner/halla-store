@use 'variables' as *;
@use 'mixins' as *;
@use 'sass:map';

.form {
  display: flex;
  flex-direction: column;

  &__wrapper {
    width: 100%;
    margin-left: auto;
    margin-right: auto;

    @include media-up(md) {
      width: 50%;
    }
  }

  &__row {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;

    @include media-up(sm) {
      flex-wrap: nowrap;
      & .form__group + * {
        margin-left: 1rem;
      }
    }

  }

  &__group {
    flex-basis: 100%;
    margin-bottom: 1rem;
    flex-shrink: 0;

    @include media-up(sm) {
      flex-shrink: 1;
    }

    & label,
    & .form__label {
      display: block;
      margin-bottom: .25rem;
      font-size: .9rem;
      user-select: none;
    }

    &--checkbox {
      & label {
        display: inline;
        margin-left: .5rem;
      }
    }

    &--justify-end {
      display: flex;
      justify-content: flex-end;
    }


    &--radio {
      padding: 1rem;
      display: flex;
      align-items: center;
      position: relative;
      min-height: 4rem;

      &-checkmark {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        width: 1.5rem;
        height: 1.5rem;
        border-radius: 50%;
        border: 1px solid map.get($colors-light, light-grey);
        display: flex;
        align-items: center;
        justify-content: center;

        & > .icon__wrapper {
          display: none;
        }
      }

      &-form {
        margin-top: -1rem;
        padding: 1rem;
        @include border-radius;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border: 1px solid map.get($colors-light, primary);
        border-top-color: map.get($colors-light, white);
        display: none;

        @include media-up(md) {
          padding-left: 4rem;
        }
      }

      & &-label {
        margin-bottom: 0;
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 1rem 0 3rem;
        border: 1px solid map.get($colors-light, light-grey);
        cursor: pointer;
        font-size: 1rem;
        @include border-radius;

        &:hover {
          border-color: map.get($colors-light, primary);
        }

        @include media-up(md) {
          padding: 0 2rem 0 4rem;
        }
      }

      & > input[type="radio"] {
        display: none;

        &:checked {
          & ~ label {
            border-color: map.get($colors-light, primary);
          }

          & ~ .form__group--radio-label-form {
            border-bottom: 1px solid transparent;
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
          }

          & ~ .form__group--radio-checkmark {
            border-color: map.get($colors-light, primary);
            background: map.get($colors-light, primary);

            & > .icon__wrapper {
              display: flex;

              & > svg {
                fill: map.get($colors-light, white);
              }
            }
          }
        }
      }
    }
  }


  &__input {
    background-clip: padding-box !important;
    width: 100%;
    border-radius: 0;
    padding: .75rem 1.25rem;
    line-height: 1;
    font-family: inherit;
    font-size: 1rem;
    border: 1px solid map.get($colors-light, light-grey);
    @include border-radius;

    &:not(textarea) {
      height: 52.5px;
    }

    &:required:invalid {
      box-shadow: none;
      border-color: map.get($colors-light, error);
    }

    &:-moz-ui-invalid {
      box-shadow: none;
      border-color: map.get($colors-light, error);
    }

    &:focus {
      border-color: map.get($colors-light, primary);
      outline: none;
    }

    &--stripe {
      display: flex;
      align-items: center;

      & > * {
        flex-basis: 100%;
      }
    }





    &--error {
      margin-top: .25rem;
      font-size: .9rem;
      color: map.get($colors-light, error);
    }
  }
}

.StripeElement--invalid {
  border-color: map.get($colors-light, error);
}